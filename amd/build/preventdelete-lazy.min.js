define("oermod_opencast/preventdelete-lazy",["exports","core/templates","core/str"],(function(_exports,Templates,Str){function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n
/**
   * OER subplugin for loading opencast videos
   *
   * @author     Christian Ortner <christian.ortner@tugraz.at>
   * @copyright  2024 Educational Technologies, Graz, University of Technology
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,Templates=_interopRequireWildcard(Templates),Str=_interopRequireWildcard(Str);_exports.init=async released=>{const series=released.series,videos=released.videos,action=await Str.get_string("haction","block_opencast"),visibility=await Str.get_string("hvisibility","block_opencast");let foundaction=-1,foundvisibility=-1;for(const key in series){const table=document.getElementById("opencast-videos-table-"+series[key]);if(!table)return;const thead=table.rows[0].cells;for(let i=0;i<thead.length;i++)thead[i].innerHTML.includes(action+'<div class="commands"></div>')&&(foundaction=i),window.console.log(thead[i].innerHTML),thead[i].innerHTML.includes(visibility)&&(foundvisibility=i);if(window.console.log(foundvisibility,foundaction),-1===foundaction&&-1===foundvisibility)return;for(let i=0;i<table.tBodies[0].rows.length;i++){const cell=document.getElementById("opencast-videos-table-"+series[key]+"_r"+i+"_c"+foundaction.toString()),visibility=document.getElementById("opencast-videos-table-"+series[key]+"_r"+i+"_c"+foundvisibility.toString()),content=cell.innerHTML;for(const key in videos){if(content.includes(videos[key].videoid)&&foundaction>-1){const{html:html}=await Templates.renderForPromise("oermod_opencast/info",{});cell.innerHTML=html}content.includes(videos[key].videoid)&&foundvisibility>-1&&(visibility.innerHTML="-")}}}}}));

//# sourceMappingURL=preventdelete-lazy.min.js.map