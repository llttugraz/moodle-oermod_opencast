{"version":3,"file":"preventdelete-lazy.min.js","sources":["../src/preventdelete-lazy.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * OER subplugin for loading opencast videos\n *\n * @author     Christian Ortner <christian.ortner@tugraz.at>\n * @copyright  2024 Educational Technologies, Graz, University of Technology\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Templates from \"core/templates\";\n\n/**\n * Replace the edit and delete icon of already releaased OER videos with an information.\n *\n * @param {{series: id, videos: {videoid, title}}}released\n * @returns {Promise<void>}\n */\nexport const init = async (released) => {\n    const series = released.series;\n    const videos = released.videos;\n\n    for (const key in series) {\n        let table = document.getElementById('opencast-videos-table-' + series[key]);\n        for (let i = 0; i < table.tBodies[0].rows.length; i++) {\n            let cell = document.getElementById('opencast-videos-table-' + series[key] + '_r' + i + '_c6');\n            let visibility = document.getElementById('opencast-videos-table-' + series[key] + '_r' + i + '_c5');\n            let content = cell.innerHTML;\n            for (const key in videos) {\n                if (content.includes(videos[key].videoid)) {\n                    visibility.innerHTML = '-';\n                    const {html,} = await Templates.renderForPromise('oermod_opencast/info', {});\n                    cell.innerHTML = html;\n                }\n            }\n        }\n    }\n};"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","Templates","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_exports","init","async","series","released","videos","key","table","document","getElementById","tBodies","rows","length","cell","visibility","content","innerHTML","includes","videoid","html","renderForPromise"],"mappings":"uGAuB4C,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,8EAA5CI,UAA4C,SAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAI,IAAAP,GAAA,OAAAG,EAAAK,IAAAR,GAAA,IAAAS,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAH,QAAAN,EAAAG,GAAAA,EAAAgB,IAAAnB,EAAAS,GAAAA;;;;;;;KAAA,CAA5CW,CAAAhB,WA2BEiB,SAAAC,KAnBkBC,iBAChB,MAAMC,OAASC,SAASD,OAClBE,OAASD,SAASC,OAExB,IAAK,MAAMC,OAAOH,OAAQ,CACtB,IAAII,MAAQC,SAASC,eAAe,yBAA2BN,OAAOG,MACtE,IAAK,IAAIT,EAAI,EAAGA,EAAIU,MAAMG,QAAQ,GAAGC,KAAKC,OAAQf,IAAK,CACnD,IAAIgB,KAAOL,SAASC,eAAe,yBAA2BN,OAAOG,KAAO,KAAOT,EAAI,OACnFiB,WAAaN,SAASC,eAAe,yBAA2BN,OAAOG,KAAO,KAAOT,EAAI,OACzFkB,QAAUF,KAAKG,UACnB,IAAK,MAAMV,OAAOD,OACd,GAAIU,QAAQE,SAASZ,OAAOC,KAAKY,SAAU,CACvCJ,WAAWE,UAAY,IACvB,MAAMG,KAACA,YAAepC,UAAUqC,iBAAiB,uBAAwB,CAAE,GAC3EP,KAAKG,UAAYG,IACrB,CAER,CACJ,EACF"}